name: Deploy Helm Release Workflow
on:
  push:
    branches:
    - main

jobs:

  deploy-helm-release:
    name: Deploy helm release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.push.head.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: debianmaster/actions-k3s@master
        id: k3s
        with:
          version: 'v1.21.2-k3s1'

      - name: Deploy helm release
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flask-app
        run: |
          export HELM_EXPERIMENTAL_OCI=1
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | helm registry login --username AWS --password-stdin ${ECR_REGISTRY}
          aws s3 cp s3://sferatech-helm-repo/${ECR_REPOSITORY}.txt ${ECR_REPOSITORY}.txt
          export HELM_CHART_VERSION=`head -1 ${ECR_REPOSITORY}.txt`
          helm pull oci://${ECR_REGISTRY}/${ECR_REPOSITORY} --version ${HELM_CHART_VERSION}

          # Deploy helm release via command line
          # tar xzvf ${ECR_REPOSITORY}-${HELM_CHART_VERSION}.tgz --warning=no-timestamp
          # helm upgrade -i flask-app ./${ECR_REPOSITORY}

          # Deploy helm release via terraform
          mv ${ECR_REPOSITORY}-${HELM_CHART_VERSION}.tgz infra/
          cd infra
          tar xzvf ${ECR_REPOSITORY}-${HELM_CHART_VERSION}.tgz --warning=no-timestamp
          export TF_VERSION=$(head -1 .terraform-version)
          curl -qL -o terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
          unzip terraform.zip
          chmod +x ./terraform
          ./terraform version
          ./terraform init
          ./terraform apply -auto-approve -input=false -var="helm_release_status=true"
